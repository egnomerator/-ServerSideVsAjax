@model Dictionary<long, Dev>;

@{
    ViewData["Title"] = "Devs";
}

<div class="row">
    <div class="col-md-4">
        <div class="h2" style="display: inline">
            Server
        </div>
        <a class="btn btn-primary" style="display: inline" asp-area="" asp-controller="Dev" asp-action="Devs">Refresh</a>
        <p></p>
        <form asp-controller="Dev" asp-action="Create" method="post">
            <div>
                @{
                    var largestExistingId = Model.Keys.OrderByDescending(k => k).FirstOrDefault();
                    var nextId = largestExistingId + 1;
                }
                <input name="id" id="newDevId" type="number" readonly value="@nextId" />
                <label for="newDevId">Next Id</label>
            </div>
            <div>
                <input name="firstName" id="newDevFirstName" type="text" />
                <label for="newDevName">First Name</label>
            </div>
            <div>
                <input name="lastName" id="newDevLastName" type="text" />
                <label for="newDevName">Last Name</label>
            </div>
            <input type="submit" value="Save Dev" />
        </form>

        <table class="table">
            <thead>
                <tr>
                    <td>Id</td>
                    <td>Name</td>
                    <td>Action</td>
                </tr>
            </thead>
            <tbody>
                @if (Model.Count < 1)
                {
                    <tr>
                        <td colspan="3" class="text-center">
                            There are no devs.
                        </td>
                    </tr>
                }
                else
                {
                    @foreach (var dev in Model)
                    {
                        var devRowId = $"devRowId{dev.Value.Id}";
                        <tr id="@devRowId">
                            <td>@dev.Value.Id</td>
                            <td>
                                <input type="text" value="@dev.Value.FirstName" onchange="nonAjaxDevs.devEdited(this)" />
                            </td>
                            <td>
                                <form asp-controller="Dev" asp-action="Dev" method="get" style="display:inline;">
                                    <input type="hidden" name="id" value="@dev.Value.Id" />
                                    <input type="submit" value="View" />
                                </form>
                                <form asp-controller="Dev" asp-action="Edit" method="post" style="display:inline;">
                                    <input type="hidden" name="id" value="@dev.Value.Id" />
                                    <input type="hidden" name="name" value="@dev.Value.FirstName" />
                                    <input type="submit" value="Edit" />
                                </form>
                                <form asp-controller="Dev" asp-action="Delete" method="post" style="display:inline;">
                                    <input type="hidden" name="id" value="@dev.Value.Id" />
                                    <input type="submit" value="Delete" />
                                </form>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="col-md-4">
        <div class="h2" style="display: inline">
            jQuery
        </div>
        <a class="btn btn-primary" style="display: inline" onclick="ajaxDevs.refreshDevs()">
            Refresh
        </a>
        <p></p>
        <div>
            @{
                var largestExistingIdAjax = Model.Keys.OrderByDescending(k => k).FirstOrDefault();
                var nextIdAjax = largestExistingIdAjax + 1;
            }
            <input name="id" id="ajaxNewDevId" type="number" readonly value="@nextIdAjax" />
            <label for="ajaxNewDevId">Next Id</label>
        </div>
        <div>
            <input name="firstName" id="ajaxNewDevFirstName" type="text" />
            <label for="ajaxNewDevName">First Name</label>
        </div>
        <div>
            <input name="lastName" id="ajaxNewDevLastName" type="text" />
            <label for="newDevName">Last Name</label>
        </div>
        <button id="devSaveId" onclick="ajaxDevs.createDev()">Save Dev</button>


        <table class="table">
            <thead>
                <tr>
                    <td>Id</td>
                    <td>Name</td>
                    <td>Action</td>
                </tr>
            </thead>
            <tbody id="ajaxTableBody">
            </tbody>
        </table>
        <p></p>
        <div>
            <div class="h4" style="display:inline;">Dev Details:</div>
            <div id="ajaxDevDetailsId" style="display:inline;"></div>
        </div>
        <p></p>
        <div>
            <div class="h4" style="display:inline;">Ajax Result:</div>
            <div id="ajaxResultId" style="display:inline;"></div>
        </div>
    </div>
    <div class="col-md-4">
        <div id="reactTableContainer"></div>
    </div>
</div>
@section scripts{
    <script src="~/js/Devs/devsWebAPI.js" asp-append-version="true"></script>
    <script src="~/js/Devs/index.js" asp-append-version="true"></script>
    <script>
        ajaxDevs.subscribeToReactTableEdits();
        ajaxDevs.getDevs();
        reactDevs.renderReactDevs();
    </script>
}
